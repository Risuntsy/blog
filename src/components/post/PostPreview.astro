---
import { type CollectionEntry } from "astro:content";
import { md2txt, removePostSlugLang } from "@/utils";
import { POST_PREVIEW_LENGTH } from "@/config";
import {getLangFromUrl, useTranslations } from "@/i18n/utils";

type Props = CollectionEntry<"post">;

const post = Astro.props;
const { title, category, tags, created_at } = post.data;
const { lang } = getLangFromUrl(Astro.url);
const t = useTranslations(lang, "post");
const content = md2txt(post.body);
const previewContent = content.substring(0, POST_PREVIEW_LENGTH);
---

<div
    class="shadow-pixel dark:shadow-pixel-dark p-6 grid grid-cols-1 w-[85vw] max-w-2xl"
>
    <h3>{title}</h3>
    <p class="text-pixel-light dark:text-pixel-dark-light text-sm">
        {`${t("posted-at")} ${created_at.toISOString().substring(0, 10)} ${t("about")} `}
        <a href={`/${lang}/category/${category}/1`} class="text-sm">{category}</a>
    </p>
    <p class="text-base">
        {
            `${previewContent}${
                content.length > POST_PREVIEW_LENGTH ? "..." : ""
            }`
        }
    </p>
    <p><a href={`/${lang}/post/${removePostSlugLang(post.slug)}`} class="text-base">{t("read-more")}</a></p>
    <p class="flex space-x-3">
        {
            tags.map((tag, i) => (
                <span class="text-base">
                    <a href={`/${lang}/tag/${tag}/1`}>{`#${tag}`}</a>
                    {i < tags.length - 1 ? <span>, </span> : null}
                </span>
            ))
        }
    </p>
</div>
