---
import { getCollection } from "astro:content";
import { type Page } from "astro";
import { ITEMS_PER_PAGE } from "@/config";
import PostPaginationLayout from "@/layouts/PostPaginationLayout.astro";
import { postDateCompareReverse } from "@/utils";
import { langs } from "@/i18n/ui";

interface Props {
    page: Page;
}

export async function getStaticPaths({ paginate }: { paginate: any }) {
    const allPosts = await getCollection("post");

    const categorys = [...new Set(allPosts.map((post) => post.data.category))];
    return langs.flatMap((lang) => {
        return categorys.flatMap((category) => {
            const filteredPosts = allPosts
                .filter((post) => post.data.category === category)
                .sort(postDateCompareReverse);

            return paginate(filteredPosts, {
                pageSize: ITEMS_PER_PAGE,
                params: { lang, category },
            });
        });
    });
}

const { category, lang } = Astro.params;
const { page } = Astro.props;
---

<PostPaginationLayout
    metaTitle={`Category`}
    title={`Category: ${category}`}
    page={page}
    lang={lang}
/>
